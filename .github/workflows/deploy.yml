name: Build and Deploy Frontend Locally

on:
  workflow_dispatch: # 允许手动触发

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v3

      # 设置 Node.js 环境
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # 安装 pnpm
      - name: Install pnpm
        run: npm install -g pnpm

      # 安装依赖
      - name: Install dependencies
        run: pnpm install

      # 构建项目
      - name: Build project
        run: pnpm run build

      # 构建 Docker 镜像
      - name: Build Docker image
        run: docker build -t hellozj-web:${{ github.sha }} .

      # 将镜像保存为 tar 文件
      - name: Save Docker image to tar
        run: |
          docker save -o /home/runner/work/hellozj-web.tar hellozj-web:${{ github.sha }}
          chmod 644 /home/runner/work/hellozj-web.tar

      # 列出文件以调试
      - name: List files in current directory
        run: ls -l /home/runner/work/

      # 将 tar 文件传输到服务器
      - name: Transfer tar file to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
          port: 22
          source: "/home/runner/work/hellozj-web.tar"
          target: "/tmp/"
          strip_components: 0
          debug: true

      # 在服务器上加载镜像并启动容器
      - name: Load image and start container on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            # 加载镜像
            docker load -i /home/${{ secrets.SERVER_USER }}/hellozj-web.tar

            # 停止并删除旧容器（如果存在）
            if docker ps -a --filter "name=hellozj-web" | grep -q hellozj-web; then
              docker stop hellozj-web || true
              docker rm hellozj-web || true
            fi

            # 启动新容器
            docker run -d --name hellozj-web -p 8080:8080 hellozj-web:${{ github.sha }}